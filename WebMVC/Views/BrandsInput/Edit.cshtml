@model WebMVC.Models.BrandsInput

@{
    ViewBag.Title = "品牌商组";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>品牌商资源投入表</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group hidden">
            @Html.LabelFor(model => model.BrandID, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.BrandID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BrandID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="panel panel-primary">
            <div class="panel-heading">品牌商资源投入表创建</div>

            <div class="panel-body">
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.Stage, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.DropDownList("Stage", string.Empty)
                        @Html.ValidationMessageFor(model => model.Stage, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.Brand, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.DropDownListFor(model => model.Brand, ViewData["brands"] as List<SelectListItem>, "请选择", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.advertise, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.advertise, new { htmlAttributes = new { @class = "form-control" } })<span class="up">万元</span>
                        @Html.ValidationMessageFor(model => model.advertise, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

        </div>
        <div class="panel panel-primary">
            <div class="panel-heading">投资表</div>


            <div class="panel-body" id="jggkb">

                @{ foreach (var item in ViewBag.StageAdd)
                    {
                        <div class="form-group col-md-3" hidden>
                            <label class="control-label col-md-6" data-show='@item.Stage' for="brandAgent">@item.retail</label>
                            <div class="col-md-6">
                                <input class="form-control text-box single-line" name="@item.retail" type="text" value="@item.retailPrice"><span class="up">万元</span>
                            </div>
                        </div>
                    }
                }


            </div>
        </div>

        <div class="panel panel-primary">
            <div class="panel-heading">市场推广</div>
            <div class="panel-body">

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.EndImage, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.EndImage, new { htmlAttributes = new { @class = "form-control" } })<span class="up">万元</span>
                        @Html.ValidationMessageFor(model => model.EndImage, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.Salesperson, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Salesperson, new { htmlAttributes = new { @class = "form-control" } })<span class="up">万元</span>
                        @Html.ValidationMessageFor(model => model.Salesperson, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.HousePromote, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.HousePromote, new { htmlAttributes = new { @class = "form-control" } })<span class="up">万元</span>
                        @Html.ValidationMessageFor(model => model.HousePromote, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.demonstrator, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.demonstrator, new { htmlAttributes = new { @class = "form-control" } })<span class="up">万元</span>
                        @Html.ValidationMessageFor(model => model.demonstrator, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.outdoorActivity, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.outdoorActivity, new { htmlAttributes = new { @class = "form-control" } })<span class="up">万元</span>
                        @Html.ValidationMessageFor(model => model.outdoorActivity, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.promotionTeam, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.promotionTeam, new { htmlAttributes = new { @class = "form-control" } })<span class="up">万元</span>
                        @Html.ValidationMessageFor(model => model.promotionTeam, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.servet, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.servet, new { htmlAttributes = new { @class = "form-control" } })<span class="up">万元</span>
                        @Html.ValidationMessageFor(model => model.servet, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-4 rc2">
                    @Html.LabelFor(model => model.NewDevelopmentCost, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.NewDevelopmentCost, new { htmlAttributes = new { @class = "form-control" } })<span class="up">万元</span>
                        @Html.ValidationMessageFor(model => model.NewDevelopmentCost, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="panel panel-primary">
            <div class="panel-heading">
                价格管控表
            </div>
            <div class="panel-body" id="jhb">

                @{ foreach (var item in ViewBag.StageAdd1)
                    {
                        <div class="form-group col-md-3" hidden>
                            <label class="control-label col-md-6" data-show='@item.Stage' for="brandAgent">@item.retail</label>
                            <div class="col-md-6">
                                <input class="form-control text-box single-line" name="@item.retail" type="text" value="@item.retailPrice"><span class="up">万元</span>
                            </div>
                        </div>
                    }
                }


            </div>
        </div>

        <div class="form-group col-md-12">
            <div class="col-md-offset-6 col-md-4">
                <input type="submit" value="更新" class="btn btn-warning btn-block" />
            </div>
        </div>
    </div>

}

<div>
    @BootstrapHelpers.PrimaryButton(Url.Action("Index"), "返回列表")

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function stageSet(stage) {

            $('#jggkb').find('label[data-show]').each(function () {

                $(this).next().children().attr("disabled", "disabled");
                $(this).parent().hide();
                if ($(this).data('show') == stage) {
                    $(this).parent().show()
                    $(this).next().children().removeAttr("disabled");
                }

            });
            $('#jhb').find('label[data-show]').each(function () {

                $(this).next().children().attr("disabled", "disabled");
                $(this).parent().hide();
                if ($(this).data('show') == stage) {
                    $(this).parent().show();
                    $(this).next().children().removeAttr("disabled");
                }

            });
        }
        function sum(inputs) {
            var sum = 0;
            $(inputs).each(function () {
                var v = $(this).val();
                sum += parseFloat(v);
            });
            return sum;
        }

        $(function () {
            stageSet($("#Stage").val());
            $("#investSum").html(sum($("#invest input")));
            $("#Stage").change(function () {
                stageSet($(this).val());
            })

            $("#invest input").bind("input property change", function () {
                var inputs = $("#invest input");

                $("#investSum").html(sum(inputs));

            })
        })

    </script>
}
